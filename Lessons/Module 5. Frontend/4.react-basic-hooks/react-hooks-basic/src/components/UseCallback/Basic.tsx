import { memo, useCallback, useState } from "react"

// 
const Age = ({ age, handleClick }) => {
  return (
    <div>
      <p>–ú–Ω–µ {age} –ª–µ—Ç.</p>
      <p>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá</p>
      <button onClick={handleClick}>–°—Ç–∞—Ç—å —Å—Ç–∞—Ä—à–µ!</button>
    </div>
  )
}

// `React.memo()` –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ props
const Guide = memo(({ getRandomColor }) => {

  const color = getRandomColor()
  console.log("Guide was rendered")
  return (
    <div style={{ background: color, padding: '.4rem' }}>
      <p style={{ color: color, filter: 'invert()' }}>
        –ò–∑—É—á–∞–π —Ö—É–∫–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ!
      </p>
    </div>
  )
})

const UseCallbackBasic = () => {
  const [age, setAge] = useState(20)
  const handleClick = () => { setAge(age < 100 ? age + 10 : age) }

  const getRandomColor = useCallback(
    () => {

      console.log('getRandomColor executed');
      return `#${((Math.random() * 0xfff) << 0).toString(16)}`;
    },
    //[age] // dependencies –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç - –≤—ã–∑—ã–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å useCallback –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ (–∏–∑–º–µ–Ω–µ–Ω–∏–µ age)
    [] // dependencies –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç - –≤—ã–∑—ã–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å useCallback –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ
  )

  return (
    <>
      <Age age={age} handleClick={handleClick} />
      <Guide getRandomColor={getRandomColor} />
    </>
  )
}



export default UseCallbackBasic;